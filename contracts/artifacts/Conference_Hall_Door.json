{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50610204806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063466a014614610030575b600080fd5b61004361003e36600461016b565b610057565b604051901515815260200160405180910390f35b600080829050336001600160a01b0316816001600160a01b031663b387ef926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c9919061018f565b6001600160a01b031614801561013c5750806001600160a01b0316636053ef386040518163ffffffff1660e01b8152600401602060405180830381865afa158015610118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013c91906101ac565b1561014a5750600192915050565b50600092915050565b6001600160a01b038116811461016857600080fd5b50565b60006020828403121561017d57600080fd5b813561018881610153565b9392505050565b6000602082840312156101a157600080fd5b815161018881610153565b6000602082840312156101be57600080fd5b8151801515811461018857600080fdfea264697066735822122077e30d1964ba7ca6578c1a9cc27dc6c1a66cfa7e39c3c9e72b45a07a021f2b8b64736f6c63430008110033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x466A0146 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x16B JUMP JUMPDEST PUSH2 0x57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB387EF92 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x13C JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6053EF38 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST ISZERO PUSH2 0x14A JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x188 DUP2 PUSH2 0x153 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x188 DUP2 PUSH2 0x153 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xE30D1964BA7CA6578C1A9CC27DC6C1A66CFA7E39C3C9E72B GASLIMIT LOG0 PUSH27 0x21F2B8B64736F6C63430008110033000000000000000000000000 ",
			"sourceMap": "118:661:3:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@checkAccess_1099": {
					"entryPoint": 87,
					"id": 1099,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address": {
					"entryPoint": 363,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address_fromMemory": {
					"entryPoint": 399,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_bool_fromMemory": {
					"entryPoint": 428,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"validator_revert_address": {
					"entryPoint": 339,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1129:8",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:8",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:86:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "123:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "132:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "135:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "125:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "125:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "125:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "82:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "108:3:8",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "113:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "104:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "104:11:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "117:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:19:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:31:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "79:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "79:42:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "72:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "72:50:8"
											},
											"nodeType": "YulIf",
											"src": "69:70:8"
										}
									]
								},
								"name": "validator_revert_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "48:5:8",
										"type": ""
									}
								],
								"src": "14:131:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "220:177:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "266:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "275:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "278:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "268:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "268:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "268:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "241:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "250:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "237:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "237:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "262:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "233:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "233:32:8"
											},
											"nodeType": "YulIf",
											"src": "230:52:8"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "291:36:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "317:9:8"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "304:12:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "304:23:8"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "295:5:8",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "361:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_address",
													"nodeType": "YulIdentifier",
													"src": "336:24:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "336:31:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "336:31:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "376:15:8",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "386:5:8"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "376:6:8"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "186:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "197:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "209:6:8",
										"type": ""
									}
								],
								"src": "150:247:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "497:92:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "507:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "519:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "530:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "515:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "515:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "507:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "549:9:8"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "567:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "567:14:8"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "560:6:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "560:22:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "542:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "542:41:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "542:41:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "466:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "477:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "488:4:8",
										"type": ""
									}
								],
								"src": "402:187:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "675:170:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "721:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "730:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "733:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "723:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "723:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "723:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "696:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "705:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "692:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "692:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "717:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "688:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "688:32:8"
											},
											"nodeType": "YulIf",
											"src": "685:52:8"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "746:29:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "765:9:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "759:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "759:16:8"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "750:5:8",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "809:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_address",
													"nodeType": "YulIdentifier",
													"src": "784:24:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "784:31:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "784:31:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "824:15:8",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "834:5:8"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "824:6:8"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "641:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "652:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "664:6:8",
										"type": ""
									}
								],
								"src": "594:251:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "928:199:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "974:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "983:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "986:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "976:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "976:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "976:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "949:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "958:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "945:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "945:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "970:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "941:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "941:32:8"
											},
											"nodeType": "YulIf",
											"src": "938:52:8"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "999:29:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1018:9:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1012:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1012:16:8"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "1003:5:8",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1081:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1090:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1093:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1083:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "1083:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1083:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1050:5:8"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1071:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1064:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1057:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:21:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "1047:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1047:32:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1040:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1040:40:8"
											},
											"nodeType": "YulIf",
											"src": "1037:60:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1106:15:8",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1116:5:8"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1106:6:8"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "894:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "905:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "917:6:8",
										"type": ""
									}
								],
								"src": "850:277:8"
							}
						]
					},
					"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
					"id": 8,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063466a014614610030575b600080fd5b61004361003e36600461016b565b610057565b604051901515815260200160405180910390f35b600080829050336001600160a01b0316816001600160a01b031663b387ef926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c9919061018f565b6001600160a01b031614801561013c5750806001600160a01b0316636053ef386040518163ffffffff1660e01b8152600401602060405180830381865afa158015610118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013c91906101ac565b1561014a5750600192915050565b50600092915050565b6001600160a01b038116811461016857600080fd5b50565b60006020828403121561017d57600080fd5b813561018881610153565b9392505050565b6000602082840312156101a157600080fd5b815161018881610153565b6000602082840312156101be57600080fd5b8151801515811461018857600080fdfea264697066735822122077e30d1964ba7ca6578c1a9cc27dc6c1a66cfa7e39c3c9e72b45a07a021f2b8b64736f6c63430008110033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x466A0146 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x16B JUMP JUMPDEST PUSH2 0x57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB387EF92 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x13C JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6053EF38 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST ISZERO PUSH2 0x14A JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x188 DUP2 PUSH2 0x153 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x188 DUP2 PUSH2 0x153 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xE30D1964BA7CA6578C1A9CC27DC6C1A66CFA7E39C3C9E72B GASLIMIT LOG0 PUSH27 0x21F2B8B64736F6C63430008110033000000000000000000000000 ",
			"sourceMap": "118:661:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;486:290;;;;;;:::i;:::-;;:::i;:::-;;;567:14:8;;560:22;542:41;;530:2;515:18;486:290:3;;;;;;;;548:4;564:13;590:10;564:37;;646:10;-1:-1:-1;;;;;626:30:3;:3;-1:-1:-1;;;;;626:16:3;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;626:30:3;;625:62;;;;;662:3;-1:-1:-1;;;;;662:22:3;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;622:147;;;-1:-1:-1;710:4:3;;486:290;-1:-1:-1;;486:290:3:o;622:147::-;-1:-1:-1;752:5:3;;486:290;-1:-1:-1;;486:290:3:o;14:131:8:-;-1:-1:-1;;;;;89:31:8;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:8:o;594:251::-;664:6;717:2;705:9;696:7;692:23;688:32;685:52;;;733:1;730;723:12;685:52;765:9;759:16;784:31;809:5;784:31;:::i;850:277::-;917:6;970:2;958:9;949:7;945:23;941:32;938:52;;;986:1;983;976:12;938:52;1018:9;1012:16;1071:5;1064:13;1057:21;1050:5;1047:32;1037:60;;1093:1;1090;1083:12"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "103200",
				"executionCost": "153",
				"totalCost": "103353"
			},
			"external": {
				"checkAccess(address)": "infinite"
			}
		},
		"methodIdentifiers": {
			"checkAccess(address)": "466a0146"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "hatAddress",
					"type": "address"
				}
			],
			"name": "checkAccess",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}